***서버 라이브러리 추가되지 않고 add and remove 에서 빠진상태에서 해서 엑스,빨간밑줄 생겼었음

■■■ Mybatis Framework 환경설정 (이클립스 버전) ■■■

1. 『http://blog.mybatis.org/』 에서 mybatis 다운로드
   
   - Products 메뉴 선택(클릭)

   - Products 리스트에 보여지는 항목들 중
     『MyBatis 3     SQL Mapping Framework for Java』 항목에서
     download 메뉴 선택(클릭)
     → https://github.com/mybatis/mybatis-3/releases 페이지로 이동

   - 클릭 후 이동한 『https://github.com/mybatis/mybatis-3/releases』 페이지에서
     『mybatis-3.5.10』 항목의 『Assets』 클릭(▶Assets → ▼Assets)하여
     노드를 확장한다.

   - 확장된 노드의 목록들 중 『mybatis-3.5.10.zip』 선택(클릭)
     → 파일 다운로드 진행

   - 다시 뒤로가기 버튼 선택(클릭)
     → 『https://blog.mybatis.org/p/products.html』 페이지로 이동
 
   - 이동한 페이지에서 『Integration』 항목의 리스트들 중 
     『Spring	Integration with Spring』 항목에서
     download 메뉴 선택(클릭)
     → 『https://github.com/mybatis/spring/releases』 페이지로 이동

   - 클릭 후 이동한 『https://github.com/mybatis/spring/releases』 페이지에서
     『mybatis-spring-1.3.2』 항목으로 스크롤 이동하여 『Assets』 클릭
     (▶Assets → ▼Assets) 되며 노드 확장

   - 확장된 노드의 목록들 중 『mybatis-spring-1.3.2.zip』 선택(클릭)
     → 파일 다운로드 진행 


2. 다운로드 완료된 파일의 압축을 해제하여 아래의 파일을 준비한다.

   - mybatis-3.5.10.jar
   - mybatis-spring-1.3.2.jar


3. SpringMVC + mybatis 프로젝트 관련 라이브러리 등록

   - org.springframework.aop-3.0.2.RELEASE.jar
   - org.springframework.asm-3.0.2.RELEASE.jar
   - org.springframework.beans-3.0.2.RELEASE.jar
   - org.springframework.context-3.0.2.RELEASE.jar
   - org.springframework.core-3.0.2.RELEASE.jar
   - org.springframework.expression-3.0.2.RELEASE.jar
   - org.springframework.jdbc-3.0.2.RELEASE.jar
   - org.springframework.transaction-3.0.2.RELEASE.jar
   - org.springframework.web-3.0.2.RELEASE.jar
   - org.springframework.web.servlet-3.0.2.RELEASE.jar
   +
   - com.springsource.org.apache.commons.logging-1.1.1.jar 
   +
   - ojdbc6.jar
   +
   - jstl.jar
   - standard.jar   

     + 

   - mybatis-3.5.10.jar
   - mybatis-spring-1.3.2.jar


※ 매퍼 XML 샘플

   다운로드를 수행한 파일들 중 pdf 파일(mybatis-3.5.10.pdf)의 내용 중
   XML 관련 내용을 확인하여 샘플 DTD 를 구성할 수 있도록 한다.
   → pdf 페이지 번호 4


-----------------------------------------------------------------------------------
■■■ Spring MVC + Annotation + mybatis 프로젝트 실습 01 ■■■

○ 프로젝트
   : mybatisWork01

○ 관련 라이브러리 등록
   ...

○ 기능 구현
   : 마이바티스 환경 구성 후 프로젝트 정상 실행 여부 확인


·web.xml 건드릴거 없음
·dispatcher-servlet 구성할 거 많음
·ISampleDAO.java
·dispatcher-servlet 구성
·com.test.mybatis 에 『mapper』 폴더 생성
	Downloads > 22_mybatis > mybatis-3.5.10 폴더에서
	> mybatis-3.5.10.pdf 에서 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybatis.example.BlogMapper">
 <select id="selectBlog" resultType="Blog">
 select * from Blog where id = #{id}
 </select>
</mapper>
	
이거 복붙해서

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mybatis.IsampleDAO">
</mapper>

로 수정함
·폴더 안에 SampleDAO.xml
·dispatcher-servlet 구성  --> 구성 끝!


원래,
·ISampleDAO.java
  → DB에 액션처리하는 메소드 선언할 것이다. 쿼리문 포함하는 add,remove 등등
     그 다음에 ibatis 사용안했으면 
     SampleDAO.class 만들어서 ISampleDAO에 선언된 메소드 다 override했음

→ 그런데, 그 대신에 이제는 SampleDAO.class 가 아니라 SampleDAO.xml 이 있는 것
   어떤 메소드가 호출되면 어떤 쿼리문 쓸 지, 쿼리만 구성!!!
					     ==============

·com.test.mvc 패키지 지우고
 응답제대로 일어나는지 확인위해
 com.test.mybatis 패키지에 Sample.java 생성

·view 디렉토리에 
  Hello.jsp 생성

·hello.action 파일 만들어서 실행!
-----------------------------------------------------------------------------------
■■■ Spring MVC + Annotation + mybatis 프로젝트 실습 02 ■■■

○ 프로젝트
   : mybatisWork02

○ 기능 구현
   : 이름, 전화번호를 데이터베이스에서 읽어내어 화면에 출력
     이 과정에서 mybatis 활용

○ 데이터베이스 관련 객체 준비
   - 사용 계정 : scott
   - 테이블 : TBL_MEMBERLIST
   - 테이블 구조 : MID		NUMBER		-- PK
		 , NAME		VARCHAR2(30)
		 , TELEPHONE	VARCHAR2(40)
   - 시퀀스 : MEMBERLISTSEQ

○ 페이지 레이아웃 구성
   회원 관리

   이름 [          ]
   전화 [          ]

   <회원 추가>

   전체 인원 수 : 2명
   --------------------------
   번호  이름    전화
     1   김태형  010-.....
     2   우수정  010-.....
   --------------------------

○ 물리적 파일 구성
   - mybatisWork02_scott.sql	→ 데이터베이스 관련 작업

   - MemberDTO.java		→ 데이터 전송 객체 자료형 클래스(DTO)
   - IMemberDAO.java		→ 인터페이스
   - MemberDAO.xml		→ mybatis 환경 설정 파일 활용
   - MemberMain.java		→ mybatis 객체 활용(Controller)
   - MemberList.jsp		→ view 페이지 활용

   - dispatcher-servlet.xml	→ mybatis 객체 등록 및 활용
   - web.xml			→ front controller 등록 및 인코딩 설정(필터 활용)

○ 사용자 최초 요청 주소
   http://localhost:8090/mybatisWork02/memberlist.action


- 이제 쿼리문 한 줄 구성 작업할 필요 없음
- xml 이 마치 클래스처럼 활용되도록


-----------------------------------------------------------------------------------
■■■ Spring MVC + Annotation + mybatis 프로젝트 실습 03 ■■■

○ 프로젝트
   : mybatisWork03

○ 기능 구현
   : 성적 관리


○ 데이터베이스 관련 객체 준비
   - 사용 계정 : scott
   - 테이블 : TBL_STUDENT
     ·테이블 구조 : SID	NUMBER		-- PK
		   , NAME	VARCHAR2(30)
		   , TEL	VARCHAR2(40)

   - 테이블 : TBL_GRADE
     ·테이블 구조 : SID	NUMBER		-- PK/FK
		   , SUB1	NUMBER(3)
		   , SUB2	NUMBER(3)
		   , SUB3	NUMBER(3)

   - 뷰 : STUDENTVIEW
     ·뷰 구조 : SID, NAME, TEL, SUB
			         --- 참조 레코드 수
 
   - 뷰 : GRADEVIEW	
    ·뷰 구조 : SID, NAME, SUB1, SUB2, SUB3, TOT, AVG, CH
					     ---  ---  --
				             총점 평균 등급(합격, 과락, 불합격)
평균 60 이상이면 합격 아니면 불합격
하나라도 40미만이면 과락


┌→ grade 는 추후에 따로 작업해보기
○ 물리적 파일 구성
   - mybatisWork3_scott.sql	→ 데이터베이스 관련 작업

   - StudentDTO.java		→ 데이터 전송 객체 자료형 클래스(DTO)
				   학생 데이터 저장 및 전송	
   - GradeDTO.java		→ 데이터 전송 객체 자료형 클래스(DTO)
				   성적 데이터 저장 및 전송
   - IStudentDAO.java		→ 인터페이스
   - IGradeDAO.java		→ 인터페이스

   - StudentDAO.xml		→ mybatis 환경 설정 파일 활용
   - GradeDAO.xml		→ mybatis 환경 설정 파일 활용

   - StudentController.java	→ Controller
   - GradeController.java	→ Controller

   - StudentList.jsp		→ view 페이지
 				   (학생 명단 출력 레이아웃 구성)
   - StudentInsertForm.jsp	→ view 페이지
				   (학생 데이터 입력 폼 구성)
   - GradeList.jsp		→ view 페이지
				   (성적 리스트 출력 레이아웃 구성)
   - GradeInsertForm.jsp	→ view 페이지
				   (성적 데이터 입력 폼 구성)
   
   - dispatcher-servlet.xml	→ mybatis 객체 등록 및 활용
   - web.xml			→ 프론트 컨트롤러 등록 및 인코딩 설정(필터 활용)


○ 사용자 최초 요청 주소
   http://localhost:8090/mybatisWork03/studentlist.action












-----------------------------------------------------------------------------------





































